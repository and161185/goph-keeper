// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: gophkeeper/v1/gophkeeper.proto

package gophkeeperv1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User registration.
type RegisterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique username chosen by the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Plain password sent over TLS; server hashes with Argon2id + per-user salt_auth.
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Empty on success. Consider returning user_id if needed by clients.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// User login / session bootstrap.
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Short-lived token to authorize API calls (metadata "authorization: Bearer ...").
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Optional refresh token if you implement refresh flows.
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// KDF salt used to derive KEK on client (Argon2id).
	KekSalt []byte `protobuf:"bytes,3,opt,name=kek_salt,json=kekSalt,proto3" json:"kek_salt,omitempty"`
	// Encrypted DEK (wrapped with KEK). AEAD blob produced on client.
	WrappedDek []byte `protobuf:"bytes,4,opt,name=wrapped_dek,json=wrappedDek,proto3" json:"wrapped_dek,omitempty"`
	// Server-side user id (UUID).
	UserId        string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetKekSalt() []byte {
	if x != nil {
		return x.KekSalt
	}
	return nil
}

func (x *LoginResponse) GetWrappedDek() []byte {
	if x != nil {
		return x.WrappedDek
	}
	return nil
}

func (x *LoginResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Opaque item payload encrypted on client: {type, meta, data} as JSON, then AEAD.
type EncryptedBlob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ciphertext    []byte                 `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"` // Entire opaque AEAD blob (nonce+ct+tag as you pack it).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptedBlob) Reset() {
	*x = EncryptedBlob{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedBlob) ProtoMessage() {}

func (x *EncryptedBlob) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedBlob.ProtoReflect.Descriptor instead.
func (*EncryptedBlob) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{4}
}

func (x *EncryptedBlob) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

// Upsert payload for optimistic concurrency.
type UpsertItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client-generated UUID (string form).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Base version the client observed before modification.
	BaseVer int64 `protobuf:"varint,2,opt,name=base_ver,json=baseVer,proto3" json:"base_ver,omitempty"`
	// New encrypted blob to store.
	BlobEnc       *EncryptedBlob `protobuf:"bytes,3,opt,name=blob_enc,json=blobEnc,proto3" json:"blob_enc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertItem) Reset() {
	*x = UpsertItem{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertItem) ProtoMessage() {}

func (x *UpsertItem) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertItem.ProtoReflect.Descriptor instead.
func (*UpsertItem) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertItem) GetBaseVer() int64 {
	if x != nil {
		return x.BaseVer
	}
	return 0
}

func (x *UpsertItem) GetBlobEnc() *EncryptedBlob {
	if x != nil {
		return x.BlobEnc
	}
	return nil
}

// Version info returned by server after apply.
type ItemVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NewVer        int64                  `protobuf:"varint,2,opt,name=new_ver,json=newVer,proto3" json:"new_ver,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemVersion) Reset() {
	*x = ItemVersion{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemVersion) ProtoMessage() {}

func (x *ItemVersion) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemVersion.ProtoReflect.Descriptor instead.
func (*ItemVersion) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{6}
}

func (x *ItemVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ItemVersion) GetNewVer() int64 {
	if x != nil {
		return x.NewVer
	}
	return 0
}

func (x *ItemVersion) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Single change entry in delta stream.
type Change struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ver       int64                  `protobuf:"varint,2,opt,name=ver,proto3" json:"ver,omitempty"`
	Deleted   bool                   `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UpdatedAt *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Present only if not deleted (server can always send it; client ignores when deleted=true).
	BlobEnc       *EncryptedBlob `protobuf:"bytes,5,opt,name=blob_enc,json=blobEnc,proto3" json:"blob_enc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Change) Reset() {
	*x = Change{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{7}
}

func (x *Change) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Change) GetVer() int64 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Change) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Change) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Change) GetBlobEnc() *EncryptedBlob {
	if x != nil {
		return x.BlobEnc
	}
	return nil
}

type UpsertItemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*UpsertItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertItemsRequest) Reset() {
	*x = UpsertItemsRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertItemsRequest) ProtoMessage() {}

func (x *UpsertItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertItemsRequest.ProtoReflect.Descriptor instead.
func (*UpsertItemsRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{8}
}

func (x *UpsertItemsRequest) GetItems() []*UpsertItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpsertItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*ItemVersion         `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertItemsResponse) Reset() {
	*x = UpsertItemsResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertItemsResponse) ProtoMessage() {}

func (x *UpsertItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertItemsResponse.ProtoReflect.Descriptor instead.
func (*UpsertItemsResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{9}
}

func (x *UpsertItemsResponse) GetResults() []*ItemVersion {
	if x != nil {
		return x.Results
	}
	return nil
}

// Get all changes since a given version (LWW conflict policy on server).
type GetChangesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Inclusive lower bound: return items with ver > since_ver.
	SinceVer      int64 `protobuf:"varint,1,opt,name=since_ver,json=sinceVer,proto3" json:"since_ver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangesRequest) Reset() {
	*x = GetChangesRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesRequest) ProtoMessage() {}

func (x *GetChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesRequest.ProtoReflect.Descriptor instead.
func (*GetChangesRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{10}
}

func (x *GetChangesRequest) GetSinceVer() int64 {
	if x != nil {
		return x.SinceVer
	}
	return 0
}

type GetChangesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Changes       []*Change              `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangesResponse) Reset() {
	*x = GetChangesResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesResponse) ProtoMessage() {}

func (x *GetChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesResponse.ProtoReflect.Descriptor instead.
func (*GetChangesResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{11}
}

func (x *GetChangesResponse) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type GetItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{12}
}

func (x *GetItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ver           int64                  `protobuf:"varint,2,opt,name=ver,proto3" json:"ver,omitempty"`
	Deleted       bool                   `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	BlobEnc       *EncryptedBlob         `protobuf:"bytes,5,opt,name=blob_enc,json=blobEnc,proto3" json:"blob_enc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemResponse) Reset() {
	*x = GetItemResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse) ProtoMessage() {}

func (x *GetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse.ProtoReflect.Descriptor instead.
func (*GetItemResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{13}
}

func (x *GetItemResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetItemResponse) GetVer() int64 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *GetItemResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *GetItemResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetItemResponse) GetBlobEnc() *EncryptedBlob {
	if x != nil {
		return x.BlobEnc
	}
	return nil
}

type DeleteItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BaseVer       int64                  `protobuf:"varint,2,opt,name=base_ver,json=baseVer,proto3" json:"base_ver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItemRequest) Reset() {
	*x = DeleteItemRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemRequest) ProtoMessage() {}

func (x *DeleteItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteItemRequest) GetBaseVer() int64 {
	if x != nil {
		return x.BaseVer
	}
	return 0
}

type DeleteItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *ItemVersion           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItemResponse) Reset() {
	*x = DeleteItemResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemResponse) ProtoMessage() {}

func (x *DeleteItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteItemResponse) GetResult() *ItemVersion {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetWrappedDEKRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WrappedDek    []byte                 `protobuf:"bytes,1,opt,name=wrapped_dek,json=wrappedDek,proto3" json:"wrapped_dek,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWrappedDEKRequest) Reset() {
	*x = SetWrappedDEKRequest{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWrappedDEKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWrappedDEKRequest) ProtoMessage() {}

func (x *SetWrappedDEKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWrappedDEKRequest.ProtoReflect.Descriptor instead.
func (*SetWrappedDEKRequest) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{16}
}

func (x *SetWrappedDEKRequest) GetWrappedDek() []byte {
	if x != nil {
		return x.WrappedDek
	}
	return nil
}

type SetWrappedDEKResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWrappedDEKResponse) Reset() {
	*x = SetWrappedDEKResponse{}
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWrappedDEKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWrappedDEKResponse) ProtoMessage() {}

func (x *SetWrappedDEKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gophkeeper_v1_gophkeeper_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWrappedDEKResponse.ProtoReflect.Descriptor instead.
func (*SetWrappedDEKResponse) Descriptor() ([]byte, []int) {
	return file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP(), []int{17}
}

var File_gophkeeper_v1_gophkeeper_proto protoreflect.FileDescriptor

const file_gophkeeper_v1_gophkeeper_proto_rawDesc = "" +
	"\n" +
	"\x1egophkeeper/v1/gophkeeper.proto\x12\rgophkeeper.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"I\n" +
	"\x0fRegisterRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"+\n" +
	"\x10RegisterResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xac\x01\n" +
	"\rLoginResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\x12\x19\n" +
	"\bkek_salt\x18\x03 \x01(\fR\akekSalt\x12\x1f\n" +
	"\vwrapped_dek\x18\x04 \x01(\fR\n" +
	"wrappedDek\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\"/\n" +
	"\rEncryptedBlob\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x01 \x01(\fR\n" +
	"ciphertext\"p\n" +
	"\n" +
	"UpsertItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bbase_ver\x18\x02 \x01(\x03R\abaseVer\x127\n" +
	"\bblob_enc\x18\x03 \x01(\v2\x1c.gophkeeper.v1.EncryptedBlobR\ablobEnc\"q\n" +
	"\vItemVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\anew_ver\x18\x02 \x01(\x03R\x06newVer\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xb8\x01\n" +
	"\x06Change\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03ver\x18\x02 \x01(\x03R\x03ver\x12\x18\n" +
	"\adeleted\x18\x03 \x01(\bR\adeleted\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x127\n" +
	"\bblob_enc\x18\x05 \x01(\v2\x1c.gophkeeper.v1.EncryptedBlobR\ablobEnc\"E\n" +
	"\x12UpsertItemsRequest\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.gophkeeper.v1.UpsertItemR\x05items\"K\n" +
	"\x13UpsertItemsResponse\x124\n" +
	"\aresults\x18\x01 \x03(\v2\x1a.gophkeeper.v1.ItemVersionR\aresults\"0\n" +
	"\x11GetChangesRequest\x12\x1b\n" +
	"\tsince_ver\x18\x01 \x01(\x03R\bsinceVer\"E\n" +
	"\x12GetChangesResponse\x12/\n" +
	"\achanges\x18\x01 \x03(\v2\x15.gophkeeper.v1.ChangeR\achanges\" \n" +
	"\x0eGetItemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xc1\x01\n" +
	"\x0fGetItemResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03ver\x18\x02 \x01(\x03R\x03ver\x12\x18\n" +
	"\adeleted\x18\x03 \x01(\bR\adeleted\x129\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x127\n" +
	"\bblob_enc\x18\x05 \x01(\v2\x1c.gophkeeper.v1.EncryptedBlobR\ablobEnc\">\n" +
	"\x11DeleteItemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bbase_ver\x18\x02 \x01(\x03R\abaseVer\"H\n" +
	"\x12DeleteItemResponse\x122\n" +
	"\x06result\x18\x01 \x01(\v2\x1a.gophkeeper.v1.ItemVersionR\x06result\"7\n" +
	"\x14SetWrappedDEKRequest\x12\x1f\n" +
	"\vwrapped_dek\x18\x01 \x01(\fR\n" +
	"wrappedDek\"\x17\n" +
	"\x15SetWrappedDEKResponse2\xbf\x04\n" +
	"\n" +
	"GophKeeper\x12K\n" +
	"\bRegister\x12\x1e.gophkeeper.v1.RegisterRequest\x1a\x1f.gophkeeper.v1.RegisterResponse\x12B\n" +
	"\x05Login\x12\x1b.gophkeeper.v1.LoginRequest\x1a\x1c.gophkeeper.v1.LoginResponse\x12T\n" +
	"\vUpsertItems\x12!.gophkeeper.v1.UpsertItemsRequest\x1a\".gophkeeper.v1.UpsertItemsResponse\x12Q\n" +
	"\n" +
	"GetChanges\x12 .gophkeeper.v1.GetChangesRequest\x1a!.gophkeeper.v1.GetChangesResponse\x12H\n" +
	"\aGetItem\x12\x1d.gophkeeper.v1.GetItemRequest\x1a\x1e.gophkeeper.v1.GetItemResponse\x12Q\n" +
	"\n" +
	"DeleteItem\x12 .gophkeeper.v1.DeleteItemRequest\x1a!.gophkeeper.v1.DeleteItemResponse\x12Z\n" +
	"\rSetWrappedDEK\x12#.gophkeeper.v1.SetWrappedDEKRequest\x1a$.gophkeeper.v1.SetWrappedDEKResponseBDZBgithub.com/and161185/goph-keeper/gen/go/gophkeeper/v1;gophkeeperv1b\x06proto3"

var (
	file_gophkeeper_v1_gophkeeper_proto_rawDescOnce sync.Once
	file_gophkeeper_v1_gophkeeper_proto_rawDescData []byte
)

func file_gophkeeper_v1_gophkeeper_proto_rawDescGZIP() []byte {
	file_gophkeeper_v1_gophkeeper_proto_rawDescOnce.Do(func() {
		file_gophkeeper_v1_gophkeeper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gophkeeper_v1_gophkeeper_proto_rawDesc), len(file_gophkeeper_v1_gophkeeper_proto_rawDesc)))
	})
	return file_gophkeeper_v1_gophkeeper_proto_rawDescData
}

var file_gophkeeper_v1_gophkeeper_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_gophkeeper_v1_gophkeeper_proto_goTypes = []any{
	(*RegisterRequest)(nil),       // 0: gophkeeper.v1.RegisterRequest
	(*RegisterResponse)(nil),      // 1: gophkeeper.v1.RegisterResponse
	(*LoginRequest)(nil),          // 2: gophkeeper.v1.LoginRequest
	(*LoginResponse)(nil),         // 3: gophkeeper.v1.LoginResponse
	(*EncryptedBlob)(nil),         // 4: gophkeeper.v1.EncryptedBlob
	(*UpsertItem)(nil),            // 5: gophkeeper.v1.UpsertItem
	(*ItemVersion)(nil),           // 6: gophkeeper.v1.ItemVersion
	(*Change)(nil),                // 7: gophkeeper.v1.Change
	(*UpsertItemsRequest)(nil),    // 8: gophkeeper.v1.UpsertItemsRequest
	(*UpsertItemsResponse)(nil),   // 9: gophkeeper.v1.UpsertItemsResponse
	(*GetChangesRequest)(nil),     // 10: gophkeeper.v1.GetChangesRequest
	(*GetChangesResponse)(nil),    // 11: gophkeeper.v1.GetChangesResponse
	(*GetItemRequest)(nil),        // 12: gophkeeper.v1.GetItemRequest
	(*GetItemResponse)(nil),       // 13: gophkeeper.v1.GetItemResponse
	(*DeleteItemRequest)(nil),     // 14: gophkeeper.v1.DeleteItemRequest
	(*DeleteItemResponse)(nil),    // 15: gophkeeper.v1.DeleteItemResponse
	(*SetWrappedDEKRequest)(nil),  // 16: gophkeeper.v1.SetWrappedDEKRequest
	(*SetWrappedDEKResponse)(nil), // 17: gophkeeper.v1.SetWrappedDEKResponse
	(*timestamp.Timestamp)(nil),   // 18: google.protobuf.Timestamp
}
var file_gophkeeper_v1_gophkeeper_proto_depIdxs = []int32{
	4,  // 0: gophkeeper.v1.UpsertItem.blob_enc:type_name -> gophkeeper.v1.EncryptedBlob
	18, // 1: gophkeeper.v1.ItemVersion.updated_at:type_name -> google.protobuf.Timestamp
	18, // 2: gophkeeper.v1.Change.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 3: gophkeeper.v1.Change.blob_enc:type_name -> gophkeeper.v1.EncryptedBlob
	5,  // 4: gophkeeper.v1.UpsertItemsRequest.items:type_name -> gophkeeper.v1.UpsertItem
	6,  // 5: gophkeeper.v1.UpsertItemsResponse.results:type_name -> gophkeeper.v1.ItemVersion
	7,  // 6: gophkeeper.v1.GetChangesResponse.changes:type_name -> gophkeeper.v1.Change
	18, // 7: gophkeeper.v1.GetItemResponse.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 8: gophkeeper.v1.GetItemResponse.blob_enc:type_name -> gophkeeper.v1.EncryptedBlob
	6,  // 9: gophkeeper.v1.DeleteItemResponse.result:type_name -> gophkeeper.v1.ItemVersion
	0,  // 10: gophkeeper.v1.GophKeeper.Register:input_type -> gophkeeper.v1.RegisterRequest
	2,  // 11: gophkeeper.v1.GophKeeper.Login:input_type -> gophkeeper.v1.LoginRequest
	8,  // 12: gophkeeper.v1.GophKeeper.UpsertItems:input_type -> gophkeeper.v1.UpsertItemsRequest
	10, // 13: gophkeeper.v1.GophKeeper.GetChanges:input_type -> gophkeeper.v1.GetChangesRequest
	12, // 14: gophkeeper.v1.GophKeeper.GetItem:input_type -> gophkeeper.v1.GetItemRequest
	14, // 15: gophkeeper.v1.GophKeeper.DeleteItem:input_type -> gophkeeper.v1.DeleteItemRequest
	16, // 16: gophkeeper.v1.GophKeeper.SetWrappedDEK:input_type -> gophkeeper.v1.SetWrappedDEKRequest
	1,  // 17: gophkeeper.v1.GophKeeper.Register:output_type -> gophkeeper.v1.RegisterResponse
	3,  // 18: gophkeeper.v1.GophKeeper.Login:output_type -> gophkeeper.v1.LoginResponse
	9,  // 19: gophkeeper.v1.GophKeeper.UpsertItems:output_type -> gophkeeper.v1.UpsertItemsResponse
	11, // 20: gophkeeper.v1.GophKeeper.GetChanges:output_type -> gophkeeper.v1.GetChangesResponse
	13, // 21: gophkeeper.v1.GophKeeper.GetItem:output_type -> gophkeeper.v1.GetItemResponse
	15, // 22: gophkeeper.v1.GophKeeper.DeleteItem:output_type -> gophkeeper.v1.DeleteItemResponse
	17, // 23: gophkeeper.v1.GophKeeper.SetWrappedDEK:output_type -> gophkeeper.v1.SetWrappedDEKResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_gophkeeper_v1_gophkeeper_proto_init() }
func file_gophkeeper_v1_gophkeeper_proto_init() {
	if File_gophkeeper_v1_gophkeeper_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gophkeeper_v1_gophkeeper_proto_rawDesc), len(file_gophkeeper_v1_gophkeeper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gophkeeper_v1_gophkeeper_proto_goTypes,
		DependencyIndexes: file_gophkeeper_v1_gophkeeper_proto_depIdxs,
		MessageInfos:      file_gophkeeper_v1_gophkeeper_proto_msgTypes,
	}.Build()
	File_gophkeeper_v1_gophkeeper_proto = out.File
	file_gophkeeper_v1_gophkeeper_proto_goTypes = nil
	file_gophkeeper_v1_gophkeeper_proto_depIdxs = nil
}
